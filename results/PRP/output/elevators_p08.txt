1. Running translator
Second argument is a file name: use two translator arguments.
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.005s wall-clock]
Preparing model... [0.020s CPU, 0.001s wall-clock]
Generated 62 rules.
Computing model... [0.000s CPU, 0.007s wall-clock]
194 relevant atoms
290 auxiliary atoms
484 final queue length
527 total queue pushes
Completing instantiation... [0.000s CPU, 0.002s wall-clock]
Instantiating: [0.020s CPU, 0.017s wall-clock]
Computing fact groups...
Finding invariants...
14 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
38 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.003s wall-clock]
65 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
Removed false proposition: 36 = <none of those>
Removed false proposition: 37 = <none of those>
0 operators removed
2 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.001s wall-clock]
Translator variables: 40
Translator derived variables: 0
Translator facts: 82
Translator goal facts: 6
Translator mutex groups: 2
Translator total mutex groups size: 6
Translator operators: 73
Translator axioms: 0
Translator task size: 436
Translator peak memory: 29012 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.030s CPU, 0.029s wall-clock]

2. Running preprocessor
Building causal graph...
The causal graph is not acyclic.
40 variables of 40 necessary
0 of 2 mutex groups necessary.
73 of 73 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor facts: 82
Preprocessor derived variables: 0
Preprocessor task size: 430
Writing output...
done


3. Running search
./search/downward ipc policy-repair --dump-policy 2
This is a unit task.
./search/downward-release --heuristic "h=ff(cost_type=1)" --search "lazy_greedy([h],preferred=[h])" --random-seed 814102613 --dump-policy 2 < output
Simplifying transitions... done!
Variables: 40
Bytes per state: 8

Total allotted time (s): 1800
Max time for core JIC (remaining used in final-round repairs): 1800
Max time for each of the 1 epochs: 1800

 !! Warning: Disabling the simplification of unary operators !!
 !!           to keep the non-deterministic planning sound.  !!
Generated 446 state(s).
Dead ends: 0 state(s). (0 recorded)
move-right-nogate f1 p1 p2 (1)
go-up e2 f1 f2 (1)
move-right-nogate f1 p2 p3 (1)
move-right-nogate f1 p3 p4 (1)
move-right-nogate f1 p4 p5 (1)
move-right-nogate f1 p5 p6 (1)
move-right-nogate f1 p6 p7 (1)
collect c3 f1 p7 (1)
move-left-nogate f1 p7 p6 (1)
move-left-nogate f1 p6 p5 (1)
go-down e2 f2 f1 (1)
step-in e2 f1 p5 (1)
go-up e2 f1 f2 (1)
step-out e2 f2 p5 (1)
move-right-gate_DETDUP_0 f2 p5 p6 (1)
collect c4 f2 p6 (1)
move-right-nogate f2 p6 p7 (1)
collect c5 f2 p7 (1)
go-up e2 f2 f3 (1)
move-left-gate_DETDUP_1 f2 p7 p6 (1)
step-in e1 f1 p1 (1)
go-up e1 f1 f2 (1)
step-out e1 f2 p1 (1)
collect c6 f2 p1 (1)
step-in e1 f2 p1 (1)
go-up e1 f2 f3 (1)
step-out e1 f3 p1 (1)
collect c2 f3 p1 (1)
move-right-nogate f3 p1 p2 (1)
move-right-nogate f3 p2 p3 (1)
move-right-nogate f3 p3 p4 (1)
move-right-nogate f3 p4 p5 (1)
collect c1 f3 p5 (1)
Plan length: 33 step(s).
Plan cost: 33
Initial search time: 0s
Initial total time: 0s


Creating the simulator...


Regressing the plan...


Generating an initial policy...


Computing just-in-time repairs...
Generated 5 state(s).
Dead ends: 0 state(s).
Generated 46 state(s).
Dead ends: 0 state(s).

Could not close 0 of 2 open leaf states.
Investigated 56 states for the strong cyclic plan.
Went through another policy of score 1

Could not close 0 of 0 open leaf states.
Investigated 1 states for the strong cyclic plan.
Marking policy strong cyclic.
Went through another policy of score 1


Running a final SCD check...


Running the simulation...
...achieved the goal!



                  -{ General Statistics }-

        FSAP Combination Count: 0
       Monotonicity violations: 0
             Successful states: 39 +/- 0
                       Replans: 0 +/- 0
                       Actions: 39 +/- 0
             Recorded Deadends: 0
            State-Action Pairs: 43
  Forbidden State-Action Pairs: 0
               Strongly Cyclic: True
                  Policy Score: 1
                     Succeeded: 1 / 1
 Depth limit (of 1000) reached: 0 / 1


                  -{ Timing Statistics }-

        Regression Computation: 0s
         Engine Initialization: 0s
                   Search Time: 0s
           Policy Construction: 0s
 Evaluating the policy quality: 0.12s
              Using the policy: 0.06s
          Just-in-case Repairs: 0.14s
                Simulator time: 0s
                    Total time: 0.14s



Dumping the policy and fsaps...
Strong cyclic plan found.
Peak memory: 5468 KB
