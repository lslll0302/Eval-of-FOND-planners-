1. Running translator
Second argument is a file name: use two translator arguments.
Parsing...
Parsing: [0.010s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.010s wall-clock]
Preparing model... [0.000s CPU, 0.003s wall-clock]
Generated 71 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
144 relevant atoms
155 auxiliary atoms
299 final queue length
351 total queue pushes
Completing instantiation... [0.000s CPU, 0.003s wall-clock]
Instantiating: [0.020s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
7 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.004s wall-clock]
22 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
Removed false proposition: 0 = <none of those>
Removed true proposition: None = Atom free(n0)
Removed false proposition: None = NegatedAtom free(n0)
Removed false proposition: 8 = <none of those>
0 operators removed
4 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Translator variables: 9
Translator derived variables: 0
Translator facts: 32
Translator goal facts: 1
Translator mutex groups: 3
Translator total mutex groups size: 19
Translator operators: 40
Translator axioms: 0
Translator task size: 285
Translator peak memory: 29016 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.040s CPU, 0.049s wall-clock]

2. Running preprocessor
Building causal graph...
The causal graph is not acyclic.
9 variables of 9 necessary
0 of 3 mutex groups necessary.
40 of 40 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor facts: 32
Preprocessor derived variables: 0
Preprocessor task size: 266
Writing output...
done


3. Running search
./search/downward ipc policy-repair --dump-policy 2
This is a unit task.
./search/downward-release --heuristic "h=ff(cost_type=1)" --search "lazy_greedy([h],preferred=[h])" --random-seed 814102613 --dump-policy 2 < output
Simplifying transitions... done!
Variables: 9
Bytes per state: 4

Total allotted time (s): 1800
Max time for core JIC (remaining used in final-round repairs): 1800
Max time for each of the 1 epochs: 1800

 !! Warning: Disabling the simplification of unary operators !!
 !!           to keep the non-deterministic planning sound.  !!
Generated 20 state(s).
Dead ends: 0 state(s). (0 recorded)
move-car-normal n0 n1 (1)
move-car-normal n1 n2 (1)
move-car-spiky_DETDUP_0 n2 n3 (1)
move-car-normal n3 n4 (1)
move-car-normal n4 ng (1)
Plan length: 5 step(s).
Plan cost: 5
Initial search time: 0s
Initial total time: 0s


Creating the simulator...


Regressing the plan...


Generating an initial policy...


Computing just-in-time repairs...

Could not close 1 of 1 open leaf states.
Investigated 5 states for the strong cyclic plan.
Went through another policy of score 0.532
Generated 59 state(s).
Dead ends: 5 state(s).

Could not close 1 of 2 open leaf states.
Investigated 7 states for the strong cyclic plan.
Went through another policy of score 0
Generated 262 state(s).
Dead ends: 24 state(s).
Generated 422 state(s).
Dead ends: 30 state(s). (28 recorded)
Generated 20 state(s).
Dead ends: 0 state(s).
Generated 3 state(s).
Dead ends: 0 state(s).

Could not close 0 of 2 open leaf states.
Investigated 5 states for the strong cyclic plan.
Went through another policy of score 0
Generated 21 state(s).
Dead ends: 0 state(s).

Could not close 0 of 2 open leaf states.
Investigated 7 states for the strong cyclic plan.
Went through another policy of score 0
Generated 24 state(s).
Dead ends: 0 state(s).
Generated 10 state(s).
Dead ends: 0 state(s).

Could not close 0 of 2 open leaf states.
Investigated 7 states for the strong cyclic plan.
Went through another policy of score 0
Generated 31 state(s).
Dead ends: 0 state(s).
Generated 6 state(s).
Dead ends: 0 state(s).

Could not close 0 of 2 open leaf states.
Investigated 9 states for the strong cyclic plan.
Went through another policy of score 0
Generated 33 state(s).
Dead ends: 0 state(s).

Could not close 0 of 2 open leaf states.
Investigated 11 states for the strong cyclic plan.
Went through another policy of score 0
Generated 31 state(s).
Dead ends: 0 state(s).
Generated 4 state(s).
Dead ends: 0 state(s).

Could not close 0 of 2 open leaf states.
Investigated 13 states for the strong cyclic plan.
Went through another policy of score 0
Generated 259 state(s).
Dead ends: 22 state(s).
Generated 445 state(s).
Dead ends: 28 state(s). (26 recorded)
Generated 9 state(s).
Dead ends: 0 state(s).

Could not close 0 of 2 open leaf states.
Investigated 23 states for the strong cyclic plan.
Went through another policy of score 0
Generated 292 state(s).
Dead ends: 0 state(s).
Generated 315 state(s).
Dead ends: 0 state(s). (0 recorded)

Could not close 0 of 2 open leaf states.
Investigated 44 states for the strong cyclic plan.
Found a better policy of score 1

Could not close 0 of 0 open leaf states.
Investigated 1 states for the strong cyclic plan.
Marking policy strong cyclic.
Went through another policy of score 1


Running a final SCD check...


Running the simulation...
...achieved the goal!



                  -{ General Statistics }-

        FSAP Combination Count: 0
       Monotonicity violations: 0
             Successful states: 23 +/- 0
                       Replans: 0 +/- 0
                       Actions: 23 +/- 0
             Recorded Deadends: 35
            State-Action Pairs: 23
  Forbidden State-Action Pairs: 121
               Strongly Cyclic: True
                  Policy Score: 1
                     Succeeded: 1 / 1
 Depth limit (of 1000) reached: 0 / 1


                  -{ Timing Statistics }-

        Regression Computation: 0s
         Engine Initialization: 0s
                   Search Time: 0s
           Policy Construction: 0s
 Evaluating the policy quality: 51.1s
              Using the policy: 26.8s
          Just-in-case Repairs: 51.1s
                Simulator time: 0s
                    Total time: 51.1s



Dumping the policy and fsaps...
Strong cyclic plan found.
Peak memory: 8108 KB
