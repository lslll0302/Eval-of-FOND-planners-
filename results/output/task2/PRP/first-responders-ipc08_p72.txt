1. Running translator
Second argument is a file name: use two translator arguments.
Parsing...
Warning: Atom fire(l2) is specified twice in initial state specification
Warning: Atom adjacent(l1, l1) is specified twice in initial state specification
Warning: Atom adjacent(l1, l1) is specified twice in initial state specification
Warning: Atom adjacent(l2, l2) is specified twice in initial state specification
Warning: Atom adjacent(l2, l2) is specified twice in initial state specification
Warning: Atom adjacent(l3, l2) is specified twice in initial state specification
Warning: Atom adjacent(l2, l3) is specified twice in initial state specification
Warning: Atom adjacent(l3, l3) is specified twice in initial state specification
Warning: Atom adjacent(l3, l3) is specified twice in initial state specification
Warning: Atom adjacent(l4, l2) is specified twice in initial state specification
Warning: Atom adjacent(l2, l4) is specified twice in initial state specification
Warning: Atom adjacent(l5, l3) is specified twice in initial state specification
Warning: Atom adjacent(l3, l5) is specified twice in initial state specification
Warning: Atom adjacent(l5, l5) is specified twice in initial state specification
Warning: Atom adjacent(l5, l5) is specified twice in initial state specification
Parsing: [0.010s CPU, 0.007s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.012s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 68 rules.
Computing model... [0.030s CPU, 0.034s wall-clock]
573 relevant atoms
635 auxiliary atoms
1208 final queue length
1485 total queue pushes
Completing instantiation... [0.020s CPU, 0.031s wall-clock]
Instantiating: [0.060s CPU, 0.083s wall-clock]
Computing fact groups...
Finding invariants...
21 initial candidates
Finding invariants: [0.020s CPU, 0.009s wall-clock]
Checking invariant weight... [0.000s CPU, 0.002s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
9 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.002s wall-clock]
Computing fact groups: [0.020s CPU, 0.016s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.037s wall-clock]
110 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
Removed false proposition: 0 = <none of those>
Removed false proposition: 1 = <none of those>
Removed false proposition: 2 = <none of those>
Removed false proposition: 3 = <none of those>
Removed false proposition: 4 = <none of those>
Removed false proposition: 5 = <none of those>
Removed false proposition: 6 = <none of those>
Removed false proposition: 7 = <none of those>
Removed false proposition: 13 = <none of those>
Removed operator: (drive-fire-unit_v2 f1 l1 l2)
Removed operator: (drive-fire-unit_v2 f1 l3 l2)
Removed operator: (drive-fire-unit_v2 f1 l4 l2)
Removed operator: (drive-fire-unit_v2 f1 l5 l2)
Removed operator: (drive-fire-unit_v2 f1 l7 l2)
Removed operator: (drive-fire-unit_v2 f2 l1 l2)
Removed operator: (drive-fire-unit_v2 f2 l3 l2)
Removed operator: (drive-fire-unit_v2 f2 l4 l2)
Removed operator: (drive-fire-unit_v2 f2 l5 l2)
Removed operator: (drive-fire-unit_v2 f2 l7 l2)
Removed operator: (drive-fire-unit_v2 f3 l1 l2)
Removed operator: (drive-fire-unit_v2 f3 l3 l2)
Removed operator: (drive-fire-unit_v2 f3 l4 l2)
Removed operator: (drive-fire-unit_v2 f3 l5 l2)
Removed operator: (drive-fire-unit_v2 f3 l7 l2)
Removed operator: (drive-fire-unit_v2 f4 l1 l2)
Removed operator: (drive-fire-unit_v2 f4 l3 l2)
Removed operator: (drive-fire-unit_v2 f4 l4 l2)
Removed operator: (drive-fire-unit_v2 f4 l5 l2)
Removed operator: (drive-fire-unit_v2 f4 l7 l2)
Removed operator: (drive-fire-unit_v2 f5 l1 l2)
Removed operator: (drive-fire-unit_v2 f5 l3 l2)
Removed operator: (drive-fire-unit_v2 f5 l4 l2)
Removed operator: (drive-fire-unit_v2 f5 l5 l2)
Removed operator: (drive-fire-unit_v2 f5 l7 l2)
Removed operator: (drive-medical-unit_v2 m1 l1 l2)
Removed operator: (drive-medical-unit_v2 m1 l3 l2)
Removed operator: (drive-medical-unit_v2 m1 l4 l2)
Removed operator: (drive-medical-unit_v2 m1 l5 l2)
Removed operator: (drive-medical-unit_v2 m1 l7 l2)
30 operators removed
9 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.004s wall-clock]
Translator variables: 18
Translator derived variables: 0
Translator facts: 78
Translator goal facts: 3
Translator mutex groups: 10
Translator total mutex groups size: 62
Translator operators: 323
Translator axioms: 0
Translator task size: 1472
Translator peak memory: 30416 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.130s CPU, 0.156s wall-clock]

2. Running preprocessor
Building causal graph...
The causal graph is not acyclic.
18 variables of 18 necessary
0 of 10 mutex groups necessary.
323 of 323 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor facts: 78
Preprocessor derived variables: 0
Preprocessor task size: 1410
Writing output...
done


3. Running search
./search/downward ipc policy-repair --dump-policy 2
This is a unit task.
./search/downward-release --heuristic "h=ff(cost_type=1)" --search "lazy_greedy([h],preferred=[h])" --random-seed 814102613 --dump-policy 2 < output
Simplifying transitions... done!
Variables: 18
Bytes per state: 8

Total allotted time (s): 1800
Max time for core JIC (remaining used in final-round repairs): 1800
Max time for each of the 1 epochs: 1800

 !! Warning: Disabling the simplification of unary operators !!
 !!           to keep the non-deterministic planning sound.  !!
Generated 243 state(s).
Dead ends: 0 state(s). (0 recorded)
load-fire-unit f4 l4 (1)
unload-fire-unit_DETDUP_1 f4 l4 l2 (1)
load-medical-unit m1 l1 v2 (1)
drive-medical-unit m1 l1 l3 (1)
unload-medical-unit m1 l3 v2 (1)
treat-victim-at-hospital v2 l3 (1)
treat-victim-on-scene-fire_DETDUP_1 f1 l1 v1 (1)
Plan length: 7 step(s).
Plan cost: 7
Initial search time: 0s
Initial total time: 0s


Creating the simulator...


Regressing the plan...


Generating an initial policy...


Computing just-in-time repairs...

Could not close 0 of 0 open leaf states.
Investigated 1 states for the strong cyclic plan.
Marking policy strong cyclic.
Went through another policy of score 1


Running a final SCD check...


Running the simulation...
...achieved the goal!



                  -{ General Statistics }-

        FSAP Combination Count: 0
       Monotonicity violations: 0
             Successful states: 10 +/- 0
                       Replans: 0 +/- 0
                       Actions: 10 +/- 0
             Recorded Deadends: 0
            State-Action Pairs: 8
  Forbidden State-Action Pairs: 0
               Strongly Cyclic: True
                  Policy Score: 1
                     Succeeded: 1 / 1
 Depth limit (of 1000) reached: 0 / 1


                  -{ Timing Statistics }-

        Regression Computation: 0s
         Engine Initialization: 0s
                   Search Time: 0s
           Policy Construction: 0s
 Evaluating the policy quality: 0.02s
              Using the policy: 0.02s
          Just-in-case Repairs: 0.02s
                Simulator time: 0s
                    Total time: 0.02s



Dumping the policy and fsaps...
Strong cyclic plan found.
Peak memory: 5108 KB
