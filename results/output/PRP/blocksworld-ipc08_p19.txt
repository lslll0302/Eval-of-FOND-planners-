1. Running translator
Second argument is a file name: use two translator arguments.
Parsing...
Parsing: [0.010s CPU, 0.005s wall-clock]
Normalizing task... [0.000s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.009s wall-clock]
Preparing model... [0.000s CPU, 0.003s wall-clock]
Generated 67 rules.
Computing model... [0.180s CPU, 0.191s wall-clock]
4692 relevant atoms
3650 auxiliary atoms
8342 final queue length
15464 total queue pushes
Completing instantiation... [0.340s CPU, 0.423s wall-clock]
Instantiating: [0.540s CPU, 0.631s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
11 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.002s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.030s CPU, 0.026s wall-clock]
Translating task: [0.420s CPU, 0.447s wall-clock]
2090 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
Removed false proposition: 11 = <none of those>
Removed false proposition: 12 = <none of those>
Removed false proposition: 13 = <none of those>
Removed false proposition: 14 = <none of those>
Removed false proposition: 15 = <none of those>
Removed false proposition: 16 = <none of those>
Removed false proposition: 17 = <none of those>
Removed false proposition: 18 = <none of those>
Removed false proposition: 19 = <none of those>
Removed false proposition: 20 = <none of those>
0 operators removed
10 propositions removed
Detecting unreachable propositions: [0.060s CPU, 0.072s wall-clock]
Translator variables: 21
Translator derived variables: 0
Translator facts: 142
Translator goal facts: 14
Translator mutex groups: 11
Translator total mutex groups size: 131
Translator operators: 3200
Translator axioms: 0
Translator task size: 21458
Translator peak memory: 50736 KB
Writing output... [0.070s CPU, 0.090s wall-clock]
Done! [1.130s CPU, 1.291s wall-clock]

2. Running preprocessor
Building causal graph...
The causal graph is not acyclic.
21 variables of 21 necessary
1 of 11 mutex groups necessary.
3200 of 3200 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor facts: 142
Preprocessor derived variables: 0
Preprocessor task size: 21338
Writing output...
done


3. Running search
./search/downward ipc policy-repair --dump-policy 2
This is a unit task.
./search/downward-release --heuristic "h=ff(cost_type=1)" --search "lazy_greedy([h],preferred=[h])" --random-seed 814102613 --dump-policy 2 < output
Simplifying transitions... done!
Variables: 21
Bytes per state: 8

Total allotted time (s): 1800
Max time for core JIC (remaining used in final-round repairs): 1800
Max time for each of the 1 epochs: 1800

 !! Warning: Disabling the simplification of unary operators !!
 !!           to keep the non-deterministic planning sound.  !!
Generated 766 state(s).
Dead ends: 0 state(s). (0 recorded)
pick-tower_DETDUP_1 b5 b1 b3 (1)
put-down b1 (1)
pick-tower_DETDUP_1 b6 b10 b8 (1)
put-on-block_DETDUP_0 b10 b6 (1)
pick-tower_DETDUP_1 b9 b7 b4 (1)
put-down b7 (1)
pick-up-from-table_DETDUP_1 b4 (1)
put-on-block_DETDUP_0 b4 b10 (1)
pick-tower_DETDUP_1 b10 b6 b10 (1)
put-on-block_DETDUP_0 b6 b1 (1)
pick-up_DETDUP_0 b3 b2 (1)
put-on-block_DETDUP_0 b3 b7 (1)
pick-up_DETDUP_0 b5 b1 (1)
put-on-block_DETDUP_0 b5 b2 (1)
pick-up-from-table_DETDUP_1 b8 (1)
put-on-block_DETDUP_0 b8 b4 (1)
pick-tower_DETDUP_1 b5 b2 b9 (1)
put-down b2 (1)
pick-up_DETDUP_1 b9 b7 (1)
pick-up-from-table_DETDUP_1 b2 (1)
put-on-block_DETDUP_0 b2 b9 (1)
Plan length: 21 step(s).
Plan cost: 21
Initial search time: 0.02s
Initial total time: 0.14s


Creating the simulator...


Regressing the plan...


Generating an initial policy...


Computing just-in-time repairs...
Generated 17 state(s).
Dead ends: 0 state(s).
Generated 16 state(s).
Dead ends: 0 state(s).
Generated 16 state(s).
Dead ends: 0 state(s).
Generated 15 state(s).
Dead ends: 0 state(s).
Generated 12 state(s).
Dead ends: 0 state(s).

Could not close 0 of 5 open leaf states.
Investigated 49 states for the strong cyclic plan.
Went through another policy of score 1

Could not close 0 of 0 open leaf states.
Investigated 1 states for the strong cyclic plan.
Marking policy strong cyclic.
Went through another policy of score 1


Running a final SCD check...


Running the simulation...
...achieved the goal!



                  -{ General Statistics }-

        FSAP Combination Count: 0
       Monotonicity violations: 0
             Successful states: 39 +/- 0
                       Replans: 0 +/- 0
                       Actions: 39 +/- 0
             Recorded Deadends: 0
            State-Action Pairs: 27
  Forbidden State-Action Pairs: 0
               Strongly Cyclic: True
                  Policy Score: 1
                     Succeeded: 1 / 1
 Depth limit (of 1000) reached: 0 / 1


                  -{ Timing Statistics }-

        Regression Computation: 0s
         Engine Initialization: 0s
                   Search Time: 0.04s
           Policy Construction: 0.02s
 Evaluating the policy quality: 0.14s
              Using the policy: 0.02s
          Just-in-case Repairs: 0.18s
                Simulator time: 0s
                    Total time: 0.3s



Dumping the policy and fsaps...
Strong cyclic plan found.
Peak memory: 9736 KB
